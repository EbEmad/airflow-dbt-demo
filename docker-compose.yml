version: '3'
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: root
      POSTGRES_DB: airflow
    ports:
      - "5433:5432"
  webserver:
    build:
      context: .
      dockerfile: Dockerfile
      target: airflow
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=mysecretkey
      - AIRFLOW__CORE__FERNET_KEY=GgyJ5jUehSy2zQqY958eUWW1ezEgNp4OerBy-AKuD14=
      - DBT_PROFILES_DIR=/opt/airflow/dbt/profiles
      - PYTHONPATH=/opt/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./dbt:/opt/airflow/dbt
      - ./dbt_airflow:/opt/airflow/dbt_airflow
    ports:
      - "8080:8080"
    entrypoint: /Airflow.sh
    depends_on:
      - dbt
      - postgres
    command: webserver

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
      target: airflow
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=mysecretkey
      - AIRFLOW__CORE__FERNET_KEY=GgyJ5jUehSy2zQqY958eUWW1ezEgNp4OerBy-AKuD14=
      - DBT_PROFILES_DIR=/opt/airflow/dbt/profiles
      - PYTHONPATH=/opt/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./dbt:/opt/airflow/dbt
      - ./dbt_airflow:/opt/airflow/dbt_airflow
    depends_on:
      - dbt
      - postgres
    command: scheduler

      # DBT Service
  dbt:
    build:
      context: .
      dockerfile: Dockerfile
      target: dbt
    depends_on:
      - db
    volumes:
      - ./dbt:/opt/dbt
      - ./dbt/profiles:/opt/dbt/profiles                                                                                               
    entrypoint: /dbt.sh
    command: tail -f /dev/null